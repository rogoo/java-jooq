/*
 * This file is generated by jOOQ.
 */
package br.rosa.rjooq.generated.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Post implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer id;
    private String assunto;
    private String descricao;
    private Integer idAuthor;
    private LocalDateTime time;
    private LocalDateTime timeDisabled;

    public Post() {}

    public Post(Post value) {
        this.id = value.id;
        this.assunto = value.assunto;
        this.descricao = value.descricao;
        this.idAuthor = value.idAuthor;
        this.time = value.time;
        this.timeDisabled = value.timeDisabled;
    }

    public Post(
        Integer id,
        String assunto,
        String descricao,
        Integer idAuthor,
        LocalDateTime time,
        LocalDateTime timeDisabled
    ) {
        this.id = id;
        this.assunto = assunto;
        this.descricao = descricao;
        this.idAuthor = idAuthor;
        this.time = time;
        this.timeDisabled = timeDisabled;
    }

    /**
     * Getter for <code>library.post.id</code>.
     */
    public Integer getId() {
        return this.id;
    }

    /**
     * Setter for <code>library.post.id</code>.
     */
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * Getter for <code>library.post.assunto</code>.
     */
    public String getAssunto() {
        return this.assunto;
    }

    /**
     * Setter for <code>library.post.assunto</code>.
     */
    public void setAssunto(String assunto) {
        this.assunto = assunto;
    }

    /**
     * Getter for <code>library.post.descricao</code>.
     */
    public String getDescricao() {
        return this.descricao;
    }

    /**
     * Setter for <code>library.post.descricao</code>.
     */
    public void setDescricao(String descricao) {
        this.descricao = descricao;
    }

    /**
     * Getter for <code>library.post.id_author</code>.
     */
    public Integer getIdAuthor() {
        return this.idAuthor;
    }

    /**
     * Setter for <code>library.post.id_author</code>.
     */
    public void setIdAuthor(Integer idAuthor) {
        this.idAuthor = idAuthor;
    }

    /**
     * Getter for <code>library.post.time</code>.
     */
    public LocalDateTime getTime() {
        return this.time;
    }

    /**
     * Setter for <code>library.post.time</code>.
     */
    public void setTime(LocalDateTime time) {
        this.time = time;
    }

    /**
     * Getter for <code>library.post.time_disabled</code>.
     */
    public LocalDateTime getTimeDisabled() {
        return this.timeDisabled;
    }

    /**
     * Setter for <code>library.post.time_disabled</code>.
     */
    public void setTimeDisabled(LocalDateTime timeDisabled) {
        this.timeDisabled = timeDisabled;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Post other = (Post) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.assunto == null) {
            if (other.assunto != null)
                return false;
        }
        else if (!this.assunto.equals(other.assunto))
            return false;
        if (this.descricao == null) {
            if (other.descricao != null)
                return false;
        }
        else if (!this.descricao.equals(other.descricao))
            return false;
        if (this.idAuthor == null) {
            if (other.idAuthor != null)
                return false;
        }
        else if (!this.idAuthor.equals(other.idAuthor))
            return false;
        if (this.time == null) {
            if (other.time != null)
                return false;
        }
        else if (!this.time.equals(other.time))
            return false;
        if (this.timeDisabled == null) {
            if (other.timeDisabled != null)
                return false;
        }
        else if (!this.timeDisabled.equals(other.timeDisabled))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.assunto == null) ? 0 : this.assunto.hashCode());
        result = prime * result + ((this.descricao == null) ? 0 : this.descricao.hashCode());
        result = prime * result + ((this.idAuthor == null) ? 0 : this.idAuthor.hashCode());
        result = prime * result + ((this.time == null) ? 0 : this.time.hashCode());
        result = prime * result + ((this.timeDisabled == null) ? 0 : this.timeDisabled.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Post (");

        sb.append(id);
        sb.append(", ").append(assunto);
        sb.append(", ").append(descricao);
        sb.append(", ").append(idAuthor);
        sb.append(", ").append(time);
        sb.append(", ").append(timeDisabled);

        sb.append(")");
        return sb.toString();
    }
}
